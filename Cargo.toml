[workspace]
members = [
	"cedar-policy",
	"cedar-policy-core",
	"cedar-policy-validator",
	"cedar-policy-formatter",
	"cedar-policy-cli",
	"cedar-testing",
	"cedar-wasm"
]

resolver = "2"

# Enable global integer overflow detection for the release profile
[profile.release]
overflow-checks = true

[profile.bench]
overflow-checks = true
debug = "line-tables-only"  # this adds more debug symbols/info to the binary than the default for `release` (which is `none`)

# Keys that packages can inherit
[workspace.package]
# Check the minimum supported Rust version with `cargo install cargo-msrv && cargo msrv --min 1.X.0` where `X` is something lower than the version noted here (to confirm that versions lower than the one noted here _don't_ work)
rust-version = "1.77"
version = "4.1.0"
homepage = "https://cedarpolicy.com"
keywords = ["cedar", "authorization", "policy", "security"]
categories = ["compilers", "config"]
license = "Apache-2.0"
edition = "2021"
repository = "https://github.com/cedar-policy/cedar"

# We actually deny all rustc warnings in CI, but it's clearer if we explicitly
# "deny" here even if setting to "warn" has the same effect.
[workspace.lints.rust]
unsafe_code = "forbid"
unexpected_cfgs = { level = 'deny', check-cfg = ['cfg(kani)', 'cfg(fuzzing)'] }
missing_debug_implementations = "deny"
rust-2018-idioms = "deny"

[workspace.lints.clippy]
# see #878
result_large_err = "allow"
large_enum_variant = "allow"
# Error on potential panics
unwrap_used = "deny"
expect_used = "deny"
fallible_impl_from = "deny"
unreachable = "deny"
indexing_slicing = "deny"
panic = "deny"
