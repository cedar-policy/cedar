name: Build Downstream Dependencies

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always
jobs:
  get-branch-name:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        shell: bash
        # The workflow is triggered by pull_request so we use `GITHUB_BASE_REF`
        run: echo "branch_name=${GITHUB_BASE_REF}" >> $GITHUB_OUTPUT
        id: get_branch_name
    outputs:
      branch_name: ${{ steps.get_branch_name.outputs.branch_name }}

  cedar-drt:
    name: CedarDRT
    runs-on: ubuntu-latest
    needs: get-branch-name
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Install Lean
        shell: bash
        run: |
            wget https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh
            bash elan-init.sh -y
      - name: Checkout cedar-spec
        uses: actions/checkout@v4
        with:
          repository: cedar-policy/cedar-spec
          ref: ${{ needs.get-branch-name.outputs.branch_name }}
          path: ./cedar-spec
      - name: checkout cedar
        uses: actions/checkout@v4
        with:
          path: cedar-spec/cedar
      - name: build cedar-lean
        working-directory: cedar-spec/cedar-lean
        shell: bash
        run: source ~/.profile && lake build Cedar:static DiffTest:static Std:static
      - name: build cedar-drt
        working-directory: cedar-spec/cedar-drt
        run: source ~/.profile && source ./set_env_vars.sh && RUSTFLAGS="-D warnings" cargo build
      - name: build cedar-drt/fuzz
        working-directory: cedar-spec/cedar-drt/fuzz
        run: source ~/.profile && source ../set_env_vars.sh && RUSTFLAGS="--cfg=fuzzing -D warnings" cargo build

  cedar-java:
    name: CedarJava
    runs-on: ubuntu-latest
    needs: get-branch-name
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Checkout cedar-java
        uses: actions/checkout@v4
        with:
          repository: cedar-policy/cedar-java
          ref: ${{ needs.get-branch-name.outputs.branch_name }}
          path: ./cedar-java
      - name: Prepare Rust Build
        run: rustup update stable && rustup default stable
      - name: Check FFI Formatting
        working-directory: cedar-java/CedarJavaFFI
        run: cargo fmt --all --check
      - name: Install Zig
        run: sudo snap install zig --beta --classic
      - name: Build FFI and Java Libraries
        working-directory: cedar-java/CedarJava
        env:
          MUST_RUN_CEDAR_INTEGRATION_TESTS: 1
        run: ./gradlew build
      - name: Generate Java Documentation
        working-directory: cedar-java/CedarJava
        run: ./gradlew javadoc

  build-cedar-examples-hello-world:
    needs: get-branch-name
    uses: cedar-policy/cedar-examples/.github/workflows/build_rust_hello_world_reusable.yml@main
    with:
      cedar_policy_ref: ${{ github.ref }}
      cedar_examples_ref: ${{ needs.get-branch-name.outputs.branch_name }}

  run-cedar-examples-use-cases:
    needs: get-branch-name
    uses: cedar-policy/cedar-examples/.github/workflows/run_example_use_cases_reusable.yml@main
    with:
      cedar_policy_ref: ${{ github.ref }}
      cedar_examples_ref: ${{ needs.get-branch-name.outputs.branch_name }}

  build-tiny-todo:
    needs: get-branch-name
    uses: cedar-policy/cedar-examples/.github/workflows/build_tiny_todo_reusable.yml@main
    with:
      cedar_policy_ref: ${{ github.ref }}
      cedar_examples_ref: ${{ needs.get-branch-name.outputs.branch_name }}
