name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

# Declare default permissions as read only.
# Since we use the GitHub App token to create the tags/references, 
# we do not need additional permissions for the "create_related_repo_tags" job.
# Apparently, actions/upload-artifacts does not need write permissions.
# See: https://github.com/actions/upload-artifact/issues/197
permissions: read-all

jobs:
  create_related_repo_tags:
    runs-on: ubuntu-latest
    # Check if APP_ID has been set
    if: vars.APP_ID
    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          repositories: cedar-spec,cedar-integration-tests

      - name: Create tag in cedar-spec
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7.1.0
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const version = tag.replace('v', '');
            const [major, minor, _] = version.split('.');
            const releaseBranch = `release/${major}.${minor}.x`;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: 'cedar-spec',
              ref: `refs/tags/${tag}`,
              sha: (await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: 'cedar-spec',
                branch: releaseBranch
              })).data.commit.sha
            });

      - name: Create tag in cedar-integration-tests
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7.1.0
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const version = tag.replace('v', '');
            const [major, minor, _] = version.split('.');
            const releaseBranch = `release/${major}.${minor}.x`;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: 'cedar-integration-tests',
              ref: `refs/tags/${tag}`,
              sha: (await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: 'cedar-integration-tests',
                branch: releaseBranch
              })).data.commit.sha
            });

  build_release_binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Install Rust toolchain
        run: rustup update stable && rustup default stable
      - name: Install protobuf (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install protobuf-compiler
      - name: Install protobuf (macOS)
        if: startsWith(matrix.os, 'macos')
        run: brew install protobuf
      - name: Build release binaries
        run: cargo build --release --all-features
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cedar-${{matrix.target}}
          path: ./target/release/cedar
