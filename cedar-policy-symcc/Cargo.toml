[package]
name = "cedar-policy-symcc"
edition.workspace = true
rust-version.workspace = true

version = "0.1.0"
license.workspace = true
categories.workspace = true
description = "Cedar Symbolic Compiler: translates queries about Cedar Policies to SMT"
keywords.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
cedar-policy = { version = "4.5.0", features = ["protobufs"] }
cedar-policy-core = "4.5.0"
anyhow = "1.0"
async-recursion = "1.1"
itertools = "0.14"
log = "0.4"
rand = "0.8.5"
ref-cast = "1.0"
smol_str = { version = "0.3", features = ["serde"] }
thiserror = "2.0"
tokio = { version = "1.0", features = ["io-util", "process"] }
num-bigint = "0.4"
num-traits = "0.2"
chrono = "0.4.41"
miette = "7.6.0"

[dev-dependencies]
miette = { version = "7.5.0", features = ["fancy"] }
tokio = { version = "1.0", features = ["full"] } # for `tokio::test` unit tests
rstest = "0.25.0"

[features]
tolerant-ast = ["cedar-policy/tolerant-ast", "cedar-policy-core/tolerant-ast"]
raw-parsing = ["cedar-policy/raw-parsing", "cedar-policy-core/raw-parsing"]
extended-schema = ["cedar-policy/extended-schema", "cedar-policy-core/extended-schema"]
integration-testing = ["tolerant-ast", "extended-schema"]

[lints]
workspace = true

[patch.crates-io]
cedar-policy = { path = "../cedar/cedar-policy" }
cedar-policy-core = { path = "../cedar/cedar-policy-core" }
